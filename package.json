{
  "publisher": "DorianMassoulier",
  "name": "repomix-runner",
  "main": "./dist/extension.js",
  "displayName": "Repomix Runner",
  "icon": "assets/repomix-logo.png",
  "description": "Easily bundle files into a single output for AI processing.",
  "repository": {
    "type": "git",
    "url": "https://github.com/massdo/repomix-runner.git"
  },
  "version": "0.4.0",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "activationEvents": [],
  "contributes": {
    "configuration": [
      {
        "title": "Runner",
        "order": 1,
        "type": "object",
        "properties": {
          "repomix.runner.keepOutputFile": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": " üìå \n Keep the output file after copying its content to clipboard"
          },
          "repomix.runner.copyMode": {
            "order": 3,
            "type": "string",
            "enum": [
              "content",
              "file"
            ],
            "default": "content",
            "description": "‚úçÔ∏è or üíæ \n Choose what to copy to clipboard: 'content' for text content, 'file' for the file itself"
          },
          "repomix.runner.useTargetAsOutput": {
            "order": 2,
            "type": "boolean",
            "default": false,
            "description": "üéØ ‚û°Ô∏è  üéØ \n Use the targetted folder as the output folder"
          },
          "repomix.runner.useBundleNameAsOutputName": {
            "order": 4,
            "type": "boolean",
            "default": true,
            "description": "üìù \n Use bundle name as output file name when running a bundle"
          },
          "repomix.runner.verbose": {
            "order": 5,
            "type": "boolean",
            "default": false,
            "description": "üîç \n Verbose mode"
          }
        }
      },
      {
        "title": "Output",
        "order": 2,
        "type": "object",
        "properties": {
          "repomix.output.filePath": {
            "order": 1,
            "type": "string",
            "default": "repomix-output.txt",
            "description": "‚öôÔ∏è ‚û°Ô∏è ‚ùì\n Path to the output file"
          },
          "repomix.output.style": {
            "order": 2,
            "type": "string",
            "enum": [
              "plain",
              "xml",
              "markdown"
            ],
            "default": "plain",
            "description": "üé® \n Output format style"
          },
          "repomix.output.parsableStyle": {
            "order": 3,
            "type": "boolean",
            "default": false,
            "description": "‚úÇÔ∏è \n - Ensures output strictly follows the specification of the chosen format. \n - Provides properly escaped XML output with fast-xml-parser.\n - Dynamically adjusts markdown code block delimiters to avoid content conflicts. \n - Note that this option can increase token count."
          },
          "repomix.output.headerText": {
            "order": 4,
            "type": "string",
            "default": "",
            "description": "üìù\n Add a header text to the output"
          },
          "repomix.output.fileSummary": {
            "order": 5,
            "type": "boolean",
            "default": true,
            "description": "‚ûïüìù\n Include file summary in output"
          },
          "repomix.output.removeEmptyLines": {
            "order": 6,
            "type": "boolean",
            "default": false,
            "description": "üßπ \n Remove empty lines from code"
          },
          "repomix.output.includeEmptyDirectories": {
            "order": 7,
            "type": "boolean",
            "default": false,
            "description": "üßπ \n Include empty directories in output"
          },
          "repomix.output.instructionFilePath": {
            "type": "string",
            "default": "",
            "description": "ü´°\n Path to a file containing detailed custom instructions "
          },
          "repomix.output.directoryStructure": {
            "type": "boolean",
            "default": true,
            "description": "‚ûïüå≥ \n Include directory tree structure in output"
          },
          "repomix.output.removeComments": {
            "type": "boolean",
            "default": false,
            "description": "üí¨ ‚ùå  \n Remove comments from code"
          },
          "repomix.output.copyToClipboard": {
            "type": "boolean",
            "default": true,
            "description": "üîó \n Copy output to clipboard"
          },
          "repomix.output.topFilesLength": {
            "type": "number",
            "default": 5,
            "description": "Number of top files to show"
          },
          "repomix.output.showLineNumbers": {
            "type": "boolean",
            "default": false,
            "description": "üî¢ \n Show line numbers in output"
          },
          "repomix.output.compress": {
            "order": 8,
            "type": "boolean",
            "default": false,
            "description": "üß† \n Perform intelligent code extraction, focusing on essential function and class signatures to reduce token count"
          }
        }
      },
      {
        "title": "Include",
        "order": 3,
        "type": "object",
        "properties": {
          "repomix.include": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "üîç \n Patterns to include in processing"
          }
        }
      },
      {
        "title": "Ignore",
        "order": 4,
        "type": "object",
        "properties": {
          "repomix.ignore.useGitignore": {
            "type": "boolean",
            "default": true,
            "description": "Use .gitignore patterns"
          },
          "repomix.ignore.useDefaultPatterns": {
            "type": "boolean",
            "default": true,
            "description": "Use default ignore patterns"
          },
          "repomix.ignore.customPatterns": {
            "order": 6,
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "üôà \n Custom patterns to ignore"
          }
        }
      },
      {
        "title": "Security",
        "order": 5,
        "type": "object",
        "properties": {
          "repomix.security.enableSecurityCheck": {
            "type": "boolean",
            "default": true,
            "description": "üîí \n Enable security check during processing"
          }
        }
      },
      {
        "title": "Token Count",
        "order": 6,
        "type": "object",
        "properties": {
          "repomix.tokenCount.encoding": {
            "type": "string",
            "enum": [
              "o200k_base",
              "cl100k_base",
              "p50k_edit",
              "p50k_base",
              "r50k_base",
              "gpt2"
            ],
            "default": "o200k_base",
            "description": "üî¢ \n Token count encoding"
          }
        }
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "repomixBundles",
          "name": "REPOMIX"
        }
      ]
    },
    "commands": [
      {
        "command": "repomixRunner.editBundle",
        "title": "Repomix: Edit Bundle",
        "icon": "$(edit)"
      },
      {
        "command": "repomixRunner.goToConfigFile",
        "title": "Repomix: Go to Bundle Config File",
        "icon": "$(go-to-file)"
      },
      {
        "command": "repomixRunner.removeSelectedFilesFromCustomViewToActiveBundle",
        "title": "Repomix: Remove Selection from Active Bundle",
        "icon": "$(trash)"
      },
      {
        "command": "repomixRunner.removeSelectedFilesFromActiveBundle",
        "title": "Repomix: Remove Selection from Active Bundle",
        "icon": "$(trash)"
      },
      {
        "command": "repomixRunner.addSelectedFilesToActiveBundle",
        "title": "Repomix: Add to Active Bundle",
        "icon": "$(plus)"
      },
      {
        "command": "repomixRunner.addSelectedFilesToNewBundle",
        "title": "Repomix: Create New Bundle with Selection",
        "icon": "$(plus)"
      },
      {
        "command": "repomixRunner.createBundle",
        "title": "Repomix: Create New Bundle",
        "icon": "$(plus)"
      },
      {
        "command": "repomixRunner.selectActiveBundle",
        "title": "Repomix: Select Active Bundle",
        "icon": "$(search)"
      },
      {
        "command": "repomixRunner.run",
        "title": "Repomix: Run",
        "description": "Run repomix on the root folder of your project",
        "icon": "assets/repomix-logo.svg"
      },
      {
        "command": "repomixRunner.runBundle",
        "title": "Repomix: Run Bundle",
        "icon": "$(play)"
      },
      {
        "command": "repomixRunner.deleteBundle",
        "title": "Repomix: Delete Bundle",
        "icon": "$(trash)",
        "enablement": "view == repomixBundles"
      },
      {
        "command": "repomixRunner.refreshBundles",
        "title": "Repomix: Refresh Bundles",
        "icon": "$(refresh)"
      },
      {
        "command": "repomixRunner.runOnSelectedFiles",
        "title": "Repomix: Run on Selection"
      },
      {
        "command": "repomixRunner.runOnOpenFiles",
        "title": "Repomix: Run On Open Files",
        "description": "Run repomix on the open files",
        "icon": "assets/file.svg"
      },
      {
        "command": "repomixRunner.openSettings",
        "title": "Repomix: Settings",
        "description": "Open Repomix Runner settings",
        "icon": "$(settings)"
      },
      {
        "command": "repomixRunner.openOutput",
        "title": "Repomix: Output",
        "description": "Open Repomix Runner output channel",
        "icon": "$(output)"
      },
      {
        "command": "repomixRunner.removeFileFromBundle",
        "title": "Remove from Bundle",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "repomixRunner.createBundle",
          "title": "Repomix: Create New Bundle",
          "when": "view == repomixBundles",
          "group": "navigation@0"
        },
        {
          "command": "repomixRunner.run",
          "title": "Repomix Run",
          "group": "navigation@1",
          "when": "view == repomixBundles"
        },
        {
          "command": "repomixRunner.runOnOpenFiles",
          "title": "Repomix On Open Files",
          "group": "navigation",
          "when": "view == repomixBundles"
        },
        {
          "command": "repomixRunner.openSettings",
          "when": "view == repomixBundles",
          "group": "navigation@2",
          "icon": "$(settings)"
        },
        {
          "command": "repomixRunner.refreshBundles",
          "when": "view == repomixBundles",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "repomixRunner.runBundle",
          "when": "viewItem == bundle",
          "group": "inline@3"
        },
        {
          "command": "repomixRunner.editBundle",
          "when": "viewItem == bundle",
          "group": "inline@2"
        },
        {
          "command": "repomixRunner.goToConfigFile",
          "when": "viewItem == bundle",
          "group": "inline@1"
        },
        {
          "command": "repomixRunner.removeSelectedFilesFromCustomViewToActiveBundle",
          "when": "viewItem in activeBundleId",
          "group": "inline@4"
        },
        {
          "command": "repomixRunner.deleteBundle",
          "when": "viewItem == bundle",
          "group": "repomix@1"
        }
      ],
      "explorer/context": [
        {
          "command": "repomixRunner.runOnSelectedFiles",
          "when": "explorerResourceIsFolder || resourceLangId",
          "group": "repomix@1"
        },
        {
          "command": "repomixRunner.addSelectedFilesToNewBundle",
          "when": "explorerResourceIsFolder || resourceLangId",
          "group": "repomix@2"
        },
        {
          "command": "repomixRunner.addSelectedFilesToActiveBundle",
          "when": "(explorerResourceIsFolder || resourceLangId) && activeBundleId",
          "group": "repomix@2"
        },
        {
          "command": "repomixRunner.removeSelectedFilesFromActiveBundle",
          "when": "(explorerResourceIsFolder || resourceLangId ) && activeBundleId",
          "group": "repomix@3"
        }
      ],
      "commandPalette": [
        {
          "command": "repomixRunner.selectActiveBundle",
          "when": "never"
        },
        {
          "command": "repomixRunner.goToConfigFile",
          "when": "never"
        },
        {
          "command": "repomixRunner.removeSelectedFilesFromActiveBundle",
          "when": "never"
        },
        {
          "command": "repomixRunner.removeSelectedFilesFromCustomViewToActiveBundle",
          "when": "never"
        },
        {
          "command": "repomixRunner.addSelectedFilesToActiveBundle",
          "when": "never"
        },
        {
          "command": "repomixRunner.addSelectedFilesToNewBundle",
          "when": "never"
        },
        {
          "command": "repomixRunner.runOnSelectedFiles",
          "when": "never"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "rimraf dist && node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "rimraf dist && npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "clean": "rimraf dist out"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.0",
    "eslint": "^9.16.0",
    "globby": "^14.1.0",
    "npm-run-all": "^4.1.5",
    "rimraf": "^6.0.1",
    "sinon": "^19.0.2",
    "tiktoken": "^1.0.20",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "zod": "^3.24.1"
  },
  "__metadata": {
    "size": 944254177
  }
}
